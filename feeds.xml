<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Frank Vielma's blog</title>
  <id>http://fv.cruxaustralis.com.ve</id>
  <link href="http://fv.cruxaustralis.com.ve"/>
  <link href="http://fv.cruxaustralis.com.ve/feeds.xml" rel="self"/>
  <updated>2015-12-24T19:30:00-04:30</updated>
  <author>
    <name>Frank Vielma</name>
  </author>
  <entry>
    <title>Ruby 2.3.0 is released</title>
    <link rel="alternate" href="http://fv.cruxaustralis.com.ve/blog/news/ruby_2.3.0.html"/>
    <id>http://fv.cruxaustralis.com.ve/blog/news/ruby_2.3.0.html</id>
    <published>2015-12-24T19:30:00-04:30</published>
    <updated>2016-10-02T09:18:34-04:00</updated>
    <author>
      <name>FV</name>
    </author>
    <content type="html">&lt;p&gt;Ruby 2.3.0 is released&lt;/p&gt;

&lt;p&gt;This is the first stable release of the Ruby 2.3 series. It introduces many new features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;
&lt;a href="https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.bz2"&gt;ruby-2.3.0.tar.bz2&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ruby 2.2.0 is released</title>
    <link rel="alternate" href="http://fv.cruxaustralis.com.ve/blog/news/ruby_2.2.0.html"/>
    <id>http://fv.cruxaustralis.com.ve/blog/news/ruby_2.2.0.html</id>
    <published>2014-12-24T19:30:00-04:30</published>
    <updated>2016-10-02T09:18:34-04:00</updated>
    <author>
      <name>FV</name>
    </author>
    <content type="html">&lt;p&gt;Ruby 2.2.0 is released&lt;/p&gt;

&lt;p&gt;Ruby 2.2 includes many new features and improvements for the increasingly diverse and expanding demands for Ruby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;
&lt;a href="https://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.bz2"&gt;ruby-2.2.0.tar.bz2&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ruby 2.1.0 is released</title>
    <link rel="alternate" href="http://fv.cruxaustralis.com.ve/blog/news/ruby_2.1.0_p0.html"/>
    <id>http://fv.cruxaustralis.com.ve/blog/news/ruby_2.1.0_p0.html</id>
    <published>2013-12-24T19:30:00-04:30</published>
    <updated>2016-10-02T09:18:34-04:00</updated>
    <author>
      <name>FV</name>
    </author>
    <content type="html">&lt;p&gt;Ruby 2.1.0 is released&lt;/p&gt;

&lt;p&gt;Ruby 2.1 has many improvements including speedup without severe incompatibilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;
&lt;a href="https://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.0.tar.bz2"&gt;ruby-2.1.0.tar.bz2&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ruby 2.0.0-p0 is released</title>
    <link rel="alternate" href="http://fv.cruxaustralis.com.ve/blog/news/ruby_2.0.0_p0.html"/>
    <id>http://fv.cruxaustralis.com.ve/blog/news/ruby_2.0.0_p0.html</id>
    <published>2013-02-23T19:30:00-04:30</published>
    <updated>2016-10-02T09:18:34-04:00</updated>
    <author>
      <name>FV</name>
    </author>
    <content type="html">&lt;p&gt;Ruby 2.0.0-p0 is released&lt;/p&gt;

&lt;p&gt;Ruby 2.0.0 is the first stable release of the Ruby 2.0 series, with many new features and improvements in response to the increasingly diverse and expanding demands for Ruby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;
&lt;a href="https://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p0.tar.bz2"&gt;ruby-2.0.0-p0.tar.bz2&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ruby 1.9.3 p0 is released</title>
    <link rel="alternate" href="http://fv.cruxaustralis.com.ve/blog/news/ruby_1.9.3_p0.html"/>
    <id>http://fv.cruxaustralis.com.ve/blog/news/ruby_1.9.3_p0.html</id>
    <published>2011-10-30T19:30:00-04:30</published>
    <updated>2016-10-02T09:18:34-04:00</updated>
    <author>
      <name>FV</name>
    </author>
    <content type="html">&lt;p&gt;Ruby 1.9.3 p0 is released. This is the latest stable version of 1.9 series.&lt;/p&gt;

&lt;p&gt;See &lt;a href="http://svn.ruby-lang.org/repos/ruby/tags/v1_9_3_0/ChangeLog" title="ChangeLogs"&gt;ChangeLogs&lt;/a&gt; and &lt;a href="http://svn.ruby-lang.org/repos/ruby/tags/v1_9_3_0/NEWS" title="NEWS"&gt;NEWS&lt;/a&gt; for the descriptions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download:&lt;/strong&gt;
&lt;a href="https://cache.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p0.tar.bz2"&gt;ruby-1.9.3-p0.tar.bz2&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery 1.6.1 Released</title>
    <link rel="alternate" href="http://fv.cruxaustralis.com.ve/blog/news/jquery_1.6.1_released.html"/>
    <id>http://fv.cruxaustralis.com.ve/blog/news/jquery_1.6.1_released.html</id>
    <published>2011-05-11T19:30:00-04:30</published>
    <updated>2016-10-02T09:18:34-04:00</updated>
    <author>
      <name>FV</name>
    </author>
    <content type="html">&lt;p&gt;jQuery 1.6.1 has been released.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://code.jquery.com/jquery-1.6.1.min.js"&gt;jQuery 1.6.1 Minified and Gzipped&lt;/a&gt; (Use in production)&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://code.jquery.com/jquery-1.6.1.js"&gt;jQuery 1.6.1 Uncompressed&lt;/a&gt; (Use for testing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally URLs directly from Microsoft and Google’s CDNs:&lt;/p&gt;

&lt;p&gt;Microsoft CDN: &lt;a href="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.6.1.min.js"&gt;http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.6.1.min.js&lt;/a&gt;&lt;br&gt;
Google CDN: &lt;a href="https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"&gt;https://ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Upgrading From 1.5.2 to 1.6.1&lt;/h3&gt;

&lt;p&gt;Jquery 1.6.1 introduces a new method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.prop()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the changes to the&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.attr()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;method.&lt;/p&gt;

&lt;h3&gt;What’s Changed&lt;/h3&gt;

&lt;p&gt;The changes to the Attributes module removed the ambiguity between attributes and properties. The old &lt;strong&gt;.attr()&lt;/strong&gt; method had many bugs and was hard to maintain.&lt;/p&gt;

&lt;p&gt;Specifically, boolean attributes such as checked, selected, readonly, and disabled in 1.6.1 will be treated just as they used to be treated in jQuery versions prior to 1.6. This means that code such as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(“:checkbox”).attr(“checked”, true);
$(“option”).attr(“selected”, true);
$(“input”).attr(“readonly”, true);
$(“input”).attr(“disabled”, true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or even:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if ( $(“:checkbox”).attr(“checked”) ) { /* Do something */ }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will not need to be changed in 1.6.1 in order to work as previously expected.&lt;/p&gt;

&lt;p&gt;To make the changes to &lt;code&gt;.attr()&lt;/code&gt; in jQuery 1.6 clear, here are some examples of the use cases of &lt;code&gt;.attr()&lt;/code&gt; that worked in previous versions of jQuery that should be switched to use &lt;code&gt;.prop()&lt;/code&gt; instead:&lt;/p&gt;

&lt;table class="table1"&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;th&gt;&lt;span class="red"&gt;.attr()&lt;/span&gt;&lt;/th&gt;

&lt;th&gt;Proper &lt;span class="red"&gt;.prop()&lt;/span&gt; usage&lt;/th&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;

    $(window).attr…

&lt;/td&gt;

&lt;td&gt;

    $(window).prop…

&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;

    $(document).attr…

&lt;/td&gt;

&lt;td&gt;

    $(document).prop…

&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;

    $(“:checkbox”).attr(“checked”, true);

&lt;/td&gt;

&lt;td&gt;

    $(“:checkbox”).prop(“checked”, true);

&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;

    $(“option”).attr(“selected”, true);

&lt;/td&gt;

&lt;td&gt;

    $(“option”).prop(“selected”, true);

&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;p&gt;First, using the &lt;code&gt;.attr()&lt;/code&gt; method on the window or document did not work in jQuery 1.6 because the window and document cannot have attributes. They contain properties (such as location or readyState) that should be manipulated with &lt;code&gt;.prop()&lt;/code&gt; or simply with raw javascript. In jQuery 1.6.1, the &lt;code&gt;.attr()&lt;/code&gt; will defer to the &lt;code&gt;.prop()&lt;/code&gt; method for both the window and document instead of throwing an error.&lt;/p&gt;

&lt;p&gt;Next, checked, selected, and other boolean attributes previously mentioned are receiving special treatment because of the special relationship between these attributes and their corresponding properties. Basically, an attribute is what you see in the html:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;input type=”checkbox” checked=”checked”&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Boolean attributes such as checked only set the default or &lt;em&gt;initial&lt;/em&gt; value. In the case of a checkbox, the checked attribute sets whether the checkbox should be checked when the page loads.&lt;/p&gt;

&lt;p&gt;Properties are what the browser uses to keep track of the &lt;strong&gt;current&lt;/strong&gt; values. Normally, properties reflect their corresponding attributes (if they exist). This is not the case with boolean attributes. Boolean properties stay up to date when the user clicks a checkbox or selects an option in a select element. The corresponding boolean attributes do not. As was stated above, they are used by the browser only to store the initial value.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(“:checkbox”).get(0).checked = true;
// Is the same as $(&amp;quot;:checkbox:first&amp;quot;).prop(“checked”, true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In jQuery 1.6, setting checked with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(“:checkbox”).attr(“checked”, true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;would not check the checkbox because it was the property that needed to be set and all you were setting was the initial value.&lt;/p&gt;

&lt;p&gt;However, once jQuery 1.6 was released, the jQuery team understood that it was not particularly useful to set something that the browser was only concerned with on page load. Therefore, in the interest of backwards compatibility and the usefulness of the &lt;code&gt;.attr()&lt;/code&gt; method, we will continue to be able to get and set these boolean attributes with the &lt;code&gt;.attr()&lt;/code&gt; method in jQuery 1.6.1.&lt;/p&gt;

&lt;p&gt;It is still recommended that &lt;code&gt;.prop()&lt;/code&gt; be used when setting these boolean attributes/properties, but your code will continue working in jQuery 1.6.1 even if these use cases are not switched to use the &lt;code&gt;.prop()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Below is a list of some attributes and properties and which method should normally be used when getting or setting them. This is the &lt;em&gt;preferred&lt;/em&gt; usage, but the &lt;code&gt;.attr()&lt;/code&gt; method will work in all attribute cases.&lt;/p&gt;

&lt;table class="table1"&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;th&gt;Attribute/Property&lt;/th&gt;

&lt;th&gt;`.attr()`&lt;/th&gt;

&lt;th&gt;`.prop()`&lt;/th&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;accesskey&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;align&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;async&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;autofocus&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;checked&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;class&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;contenteditable&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;defaultValue&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;draggable&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;href&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;id&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;label&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;location *&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;multiple&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;nodeName&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;nodeType&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;readOnly&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rel&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;selected&lt;/td&gt;

&lt;td&gt;&lt;span class="gray"&gt;✓&lt;/span&gt;&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;selectedIndex&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;src&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;style&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;tabindex&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;tagName&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;title&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;type&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;width **&lt;/td&gt;

&lt;td&gt;✓&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;For example, with &lt;code&gt;window.location&lt;/code&gt;&lt;br&gt;
** If needed over &lt;code&gt;.width()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Neither &lt;code&gt;.attr()&lt;/code&gt; nor &lt;code&gt;.prop()&lt;/code&gt; should be used for getting/setting &lt;strong&gt;value&lt;/strong&gt;. Use the &lt;code&gt;.val()&lt;/code&gt; method instead (although using .attr(“value”, “somevalue”) will continue to work, as it did before 1.6).&lt;/p&gt;
</content>
  </entry>
</feed>
